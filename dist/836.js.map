{"version":3,"file":"836.js?ver=f73e580a2e9d98f08c6c","mappings":"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","sources":["webpack://spotify-demo/./src/layout/components/LibraryHead.tsx","webpack://spotify-demo/./src/layout/components/EmptyPlayList.tsx","webpack://spotify-demo/./src/layout/components/Library.tsx","webpack://spotify-demo/./src/layout/AppLayout.tsx"],"sourcesContent":["import React from \"react\";\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\nimport AddIcon from '@mui/icons-material/Add';\nimport styled from \"styled-components\";\nimport { Button, Typography } from \"@mui/material\";\n\nconst Title = styled(\"div\")(()=>({\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    margin: \"20px 0 5px\",\n    paddingTop: \"20px\",\n    borderTop: \"1px solid rgb(59, 57, 57)\",\n    fontSize: 16,\n    fontWeight: 600,\n}))\n\nconst LibraryHead = () => {\n    return (\n        <Title>\n            <BookmarkIcon />\n            <Typography variant=\"h2\" fontWeight={600}>Your Library</Typography>\n            <Button><AddIcon color=\"primary\" /></Button>\n        </Title>\n    )\n};\n\nexport default LibraryHead;\n","import { Button, Typography } from \"@mui/material\";\n\nconst EmptyPlayList = () => {\n    return (\n        <div style={{marginTop: \"20px\"}}>\n            <Typography variant=\"h2\" fontWeight={500}>Create your first playlist</Typography> \n            <Typography variant=\"body2\">it's easy. we'll help you</Typography> \n            <Button color=\"secondary\" variant=\"contained\" sx={{marginTop: \"20px\"}}>\n                <Typography variant=\"h2\" fontWeight={600}>Create playlist</Typography>\n            </Button>\n        </div>\n    )\n};\n\nexport default EmptyPlayList;\n","import React, { useState } from \"react\";\nimport EmptyPlayList from \"./EmptyPlayList\";\n\nconst Library = () => {\n    const [myPlaylist, setMyPlaylist] = useState(null)\n    return <>\n        {!myPlaylist ? (\n            <EmptyPlayList />\n        ) : (\n            <>\n                <h3>My playlist</h3>\n                <ul>\n                    <li>song1</li>\n                </ul>\n            </>\n        )}\n    </>;\n};\n\nexport default Library;\n","import { Box, styled, Typography } from \"@mui/material\";\nimport { NavLink, Outlet } from \"react-router\";\nimport HomeIcon from '@mui/icons-material/Home';\nimport SearchIcon from '@mui/icons-material/Search';\nimport LibraryMusicIcon from '@mui/icons-material/LibraryMusic';\nimport LibraryHead from \"./components/LibraryHead\";\nimport Library from \"./components/Library\";\n\nconst Layout = styled(\"div\")({\n    display: \"flex\",\n    height: \"100vh\",\n    padding: \"8px\",\n})\n\nconst Sidebar = styled(\"div\")(({theme})=>({\n    width: \"331px\",\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    [theme.breakpoints.down(\"sm\")]:{\n        display: \"none\",\n    }\n}))\n\nconst Logo = styled(\"div\")(()=>({\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"10px\",\n    marginBottom: \"20px\"\n}))\n\nconst ContentBox = styled(Box)(({theme})=>({\n    borderRadius: \"8px\",\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.primary,\n    width: \"100%\",\n    padding: \"8px\",\n    margin: \"0 8px 8px 0\",\n}))\n\nconst NavList = styled(\"ul\")({\n    listStyle: \"none\",\n    padding: 0,\n    margin: 0,\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n})\n\nconst StyledNavLink = styled(NavLink)(({theme})=>({\n    textDecoration: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    gap: \"10px\",\n    color: theme.palette.text.secondary,\n    \"&:hover\": {\n        color: theme.palette.text.primary,\n    },\n    \"&.active\": {\n        color: theme.palette.text.primary,\n    }\n}))\n\nconst AppLayout = () => {\n\n  return (\n    <Layout>\n        <Sidebar>\n            <ContentBox>\n                <Logo>\n                    <LibraryMusicIcon color=\"primary\" /><Typography variant=\"h1\" fontWeight={700} color=\"primary\">Spotify-demo</Typography>  \n                </Logo>\n                \n                <NavList>\n                    <StyledNavLink to=\"/\">\n                        <HomeIcon /><Typography variant=\"h2\" fontWeight={700}>Home</Typography>\n                    </StyledNavLink>\n                    <StyledNavLink to=\"/search\">\n                        <SearchIcon /><Typography variant=\"h2\" fontWeight={700}>Search</Typography>\n                    </StyledNavLink>\n                </NavList>\n\n                <LibraryHead />\n                <Library />\n            </ContentBox>\n        </Sidebar>\n        <Outlet />\n    </Layout>\n  )\n};\n\nexport default AppLayout;"],"names":["Title","styled","display","alignItems","justifyContent","margin","paddingTop","borderTop","fontSize","fontWeight","LibraryHead","_jsxs","children","_jsx","BookmarkIcon","Typography","variant","Button","AddIcon","color","EmptyPlayList","style","marginTop","sx","Library","myPlaylist","setMyPlaylist","useState","_Fragment","Layout","height","padding","Sidebar","_ref","theme","width","flexDirection","breakpoints","down","Logo","gap","marginBottom","ContentBox","Box","_ref2","borderRadius","backgroundColor","palette","background","paper","text","primary","NavList","listStyle","StyledNavLink","NavLink","_ref3","textDecoration","secondary","AppLayout","LibraryMusicIcon","to","HomeIcon","SearchIcon","Outlet"],"sourceRoot":""}